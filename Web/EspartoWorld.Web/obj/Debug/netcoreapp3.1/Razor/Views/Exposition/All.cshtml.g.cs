#pragma checksum "C:\gitHub\Software-University\C# .NET Core\FinalProject\EspartoWorld\Web\EspartoWorld.Web\Views\Exposition\All.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "37487f350db4feab396283f046ce567eaaaae0f9"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Exposition_All), @"mvc.1.0.view", @"/Views/Exposition/All.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\gitHub\Software-University\C# .NET Core\FinalProject\EspartoWorld\Web\EspartoWorld.Web\Views\_ViewImports.cshtml"
using EspartoWorld.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\gitHub\Software-University\C# .NET Core\FinalProject\EspartoWorld\Web\EspartoWorld.Web\Views\_ViewImports.cshtml"
using EspartoWorld.Web.ViewModels;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"37487f350db4feab396283f046ce567eaaaae0f9", @"/Views/Exposition/All.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"0750521cbf3218c0a499ab16ef79f0abc154d0ef", @"/Views/_ViewImports.cshtml")]
    public class Views_Exposition_All : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("rel", new global::Microsoft.AspNetCore.Html.HtmlString("stylesheet"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/css/flipCards.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral(@"<!-- Visit https://codepen.io/nicolaskadis/full/brQEOd/ for the latest, no js version! -->
<div class=""container"">
    <div class=""row text-center"">
        <div class=""col-md-4 card-container"">
            <div class=""card card-flip border border-dark  m-2"">
                <div class=""front card-block"">
                    <!-- To add FontAwesome Icons use Unicode characters and to set size use font-size instead of fa-*x because when calculating the height (see js), the size of the icon is not calculated if using classes -->
                    <span class=""card-img-top fa"" style=""font-size: 4em"">&#xf118;</span>
                    <h4 class=""card-title"">Front Title</h4>
                    <h6 class=""card-subtitle text-muted"">Front Sub-title</h6>
                    <p class=""card-text"">Front Text</p>
                </div>
                <div class=""back card-block"">
                    <p>
                        Some example text<br> to
                        <br> increase
            ");
            WriteLiteral(@"            <br> card
                        <br> height
                        <br> to
                        <br> something
                        <br> long
                    </p>
                    <a href=""#"" class=""btn btn-outline-primary"">Read More</a>
                </div>
            </div>
        </div>
        <div class=""col-md-4 card-container"">
            <div class=""card card-flip m-2"">
                <div class=""front card-block"">
                    <span class=""card-img-top fa"" style=""font-size: 4em"">&#xf118;</span>
                    <h4 class=""card-title"">Front Title</h4>
                    <h6 class=""card-subtitle text-muted"">Front Sub-title</h6>
                    <p class=""card-text"">Front Text</p>
                </div>
                <div class=""back card-block"">
                    <p>Some example short text</p>
                    <a href=""#"" class=""btn btn-outline-primary"">Read More</a>
                </div>
            </div>
        </div>
 ");
            WriteLiteral(@"       <div class=""col-md-4 card-container"">
            <div class=""card card-flip m-2"">
                <div class=""front card-block"">
                    <span class=""card-img-top fa"" style=""font-size: 4em"">&#xf118;</span>
                    <h4 class=""card-title"">Front Title</h4>
                    <h6 class=""card-subtitle text-muted"">Front Sub-title</h6>
                    <p class=""card-text"">Front Text</p>
                </div>
                <div class=""back card-block"">
                    <p>Some example text</p>
                    <a href=""#"" class=""btn btn-outline-primary"">Read More</a>
                </div>
            </div>
        </div>
        <div class=""col-md-4 card-container"">
            <div class=""card card-flip m-2"">
                <div class=""front card-block"">
                    <span class=""card-img-top fa"" style=""font-size: 4em"">&#xf118;</span>
                    <h4 class=""card-title"">Front Title</h4>
                    <h6 class=""card-subtitle text");
            WriteLiteral(@"-muted"">Front Sub-title</h6>
                    <p class=""card-text"">Front Text</p>
                </div>
                <div class=""back card-block"">
                    <p>
                        Some example text<br> to
                        <br> increase
                        <br> card
                        <br> height
                        <br> to
                        <br> something
                        <br> long
                    </p>
                    <a href=""#"" class=""btn btn-outline-primary"">Read More</a>
                </div>
            </div>
        </div>
        <div class=""col-md-4 card-container"">
            <div class=""card card-flip m-2"">
                <div class=""front card-block"">
                    <span class=""card-img-top fa"" style=""font-size: 4em"">&#xf118;</span>
                    <h4 class=""card-title"">Front Title</h4>
                    <h6 class=""card-subtitle text-muted"">Front Sub-title</h6>
                    <p class=""card-t");
            WriteLiteral(@"ext"">Front Text</p>
                </div>
                <div class=""back card-block"">
                    <p>Some example short text</p>
                    <a href=""#"" class=""btn btn-outline-primary"">Read More</a>
                </div>
            </div>
        </div>
        <div class=""col-md-4 card-container"">
            <div class=""card card-flip m-2"">
                <div class=""front card-block"">
                    <span class=""card-img-top fa"" style=""font-size: 4em"">&#xf118;</span>
                    <h4 class=""card-title"">Front Title</h4>
                    <h6 class=""card-subtitle text-muted"">Front Sub-title</h6>
                    <p class=""card-text"">Front Text</p>
                </div>
                <div class=""back card-block"">
                    <p>Some example text</p>
                    <a href=""#"" class=""btn btn-outline-primary"">Read More</a>
                </div>
            </div>
        </div>
    </div>
</div>

");
            DefineSection("Scripts", async() => {
                WriteLiteral("\r\n");
                WriteLiteral(@"    <script>
        $(document).ready(function () {
            var front = document.getElementsByClassName(""front"");
            var back = document.getElementsByClassName(""back"");

            var highest = 0;
            var absoluteSide = """";

            for (var i = 0; i < front.length; i++) {
                if (front[i].offsetHeight > back[i].offsetHeight) {
                    if (front[i].offsetHeight > highest) {
                        highest = front[i].offsetHeight;
                        absoluteSide = "".front"";
                    }
                } else if (back[i].offsetHeight > highest) {
                    highest = back[i].offsetHeight;
                    absoluteSide = "".back"";
                }
            }
            $("".front"").css(""height"", highest);
            $("".back"").css(""height"", highest);
            $(absoluteSide).css(""position"", ""absolute"");
        });
    </script>
");
            }
            );
            WriteLiteral("\r\n");
            DefineSection("Styles", async() => {
                WriteLiteral(" \r\n");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "37487f350db4feab396283f046ce567eaaaae0f910539", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n");
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
